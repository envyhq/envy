---
source: packages/lexer/src/lexers/source_file_lexer.rs
expression: lexer.tokens
---
[
    LexerToken {
        kind: Keyword(
            DeclarationKeyword(
                Var,
            ),
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 1,
                column: 1,
            },
            to: TokenPosition {
                line: 1,
                column: 3,
            },
        },
    },
    LexerToken {
        kind: Identifier(
            "my_test_var",
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 1,
                column: 5,
            },
            to: TokenPosition {
                line: 1,
                column: 15,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            VarAssignmentColon,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 1,
                column: 16,
            },
            to: TokenPosition {
                line: 1,
                column: 16,
            },
        },
    },
    LexerToken {
        kind: Type(
            Int,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 1,
                column: 18,
            },
            to: TokenPosition {
                line: 1,
                column: 20,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            Newline,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 1,
                column: 21,
            },
            to: TokenPosition {
                line: 1,
                column: 21,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            Newline,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 2,
                column: 1,
            },
            to: TokenPosition {
                line: 2,
                column: 1,
            },
        },
    },
    LexerToken {
        kind: Keyword(
            VarModifierKeyword(
                Pub,
            ),
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 3,
                column: 1,
            },
            to: TokenPosition {
                line: 3,
                column: 3,
            },
        },
    },
    LexerToken {
        kind: Keyword(
            DeclarationKeyword(
                Var,
            ),
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 3,
                column: 5,
            },
            to: TokenPosition {
                line: 3,
                column: 7,
            },
        },
    },
    LexerToken {
        kind: Identifier(
            "my_pub_test_var",
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 3,
                column: 9,
            },
            to: TokenPosition {
                line: 3,
                column: 23,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            VarAssignmentColon,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 3,
                column: 24,
            },
            to: TokenPosition {
                line: 3,
                column: 24,
            },
        },
    },
    LexerToken {
        kind: Type(
            String,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 3,
                column: 26,
            },
            to: TokenPosition {
                line: 3,
                column: 28,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            Newline,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 3,
                column: 29,
            },
            to: TokenPosition {
                line: 3,
                column: 29,
            },
        },
    },
    LexerToken {
        kind: Keyword(
            DeclarationKeyword(
                Var,
            ),
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 4,
                column: 1,
            },
            to: TokenPosition {
                line: 4,
                column: 3,
            },
        },
    },
    LexerToken {
        kind: Identifier(
            "my_attr_test_var",
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 4,
                column: 5,
            },
            to: TokenPosition {
                line: 4,
                column: 20,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            VarAssignmentColon,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 4,
                column: 21,
            },
            to: TokenPosition {
                line: 4,
                column: 21,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            BlockOpenCurly,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 4,
                column: 27,
            },
            to: TokenPosition {
                line: 4,
                column: 27,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            Newline,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 4,
                column: 28,
            },
            to: TokenPosition {
                line: 4,
                column: 28,
            },
        },
    },
    LexerToken {
        kind: Identifier(
            "protocol",
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 5,
                column: 5,
            },
            to: TokenPosition {
                line: 5,
                column: 12,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            AttributeAssignmentEquals,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 5,
                column: 14,
            },
            to: TokenPosition {
                line: 5,
                column: 14,
            },
        },
    },
    LexerToken {
        kind: Literal(
            String(
                "https",
            ),
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 5,
                column: 16,
            },
            to: TokenPosition {
                line: 5,
                column: 22,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            Newline,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 5,
                column: 23,
            },
            to: TokenPosition {
                line: 5,
                column: 23,
            },
        },
    },
    LexerToken {
        kind: Identifier(
            "host",
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 6,
                column: 5,
            },
            to: TokenPosition {
                line: 6,
                column: 8,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            AttributeAssignmentEquals,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 6,
                column: 10,
            },
            to: TokenPosition {
                line: 6,
                column: 10,
            },
        },
    },
    LexerToken {
        kind: Literal(
            String(
                "test.com",
            ),
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 6,
                column: 12,
            },
            to: TokenPosition {
                line: 6,
                column: 21,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            Newline,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 6,
                column: 22,
            },
            to: TokenPosition {
                line: 6,
                column: 22,
            },
        },
    },
    LexerToken {
        kind: Symbol(
            BlockCloseCurly,
        ),
        range: TokenRange {
            from: TokenPosition {
                line: 7,
                column: 1,
            },
            to: TokenPosition {
                line: 7,
                column: 1,
            },
        },
    },
]
